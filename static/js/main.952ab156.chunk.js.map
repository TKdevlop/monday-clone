{"version":3,"sources":["hooks/useInputValue.js","AddTask/index.js","TabContainer/index.js","Nav/index.js","TaskTable/index.js","serviceWorker.js","index.js","App.js"],"names":["useInputValue","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","e","target","resetValue","AddTask","props","model","setModel","_useInputValue","task","objectWithoutProperties","_useInputValue2","trackTask","_useInputValue3","notes","_useInputValue4","today","Date","dd","getDate","mm","getMonth","getFullYear","getToday","plannedDate","currentTaskSchema","description","owner","priority","status","track","user","_useState3","_useState4","currentTask","setCurrentTask","_useState5","_useState6","taskValid","settaskValid","useEffect","validData","i","objectSpread","console","log","handleClose","handleNewTask","addTask","react_default","a","createElement","className","TextField_default","assign","name","style","margin","helperText","label","variant","id","react_responsive_default","query","AddCircle_default","disabled","color","onClick","_ref","alert","fontSize","cursor","Dialog_default","fullWidth","open","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","textAlign","DialogContentText_default","padding","type","DialogActions_default","Button_default","fullScreen","TabContainer","Typography_default","component","children","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","classes","AppBar_default","position","Toolbar_default","sideDrawer","IconButton_default","aria-label","Menu_default","theme","width","marginTop","spacing","unit","overflowX","table","minWidth","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","borderLeft","borderRadius","scope","chat","Boolean","window","location","hostname","match","ReactDOM","render","setSideDrawer","updateList","setUpdateList","chatText","_useState7","Tooltip_default","title","placement","Chat_default","_useState8","setTask","src_Nav","Tabs_default","Tab_default","src_TabContainer","AddTask_AddTask","newTask","concat","toConsumableArray","TaskTable","Drawer_default","anchor","role","onSubmit","preventDefault","List_default","item","ListItem_default","ListItemText_default","primary","secondary","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.952ab156.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useInputValue = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    onChange: e => setValue(e.target.value),\n    resetValue: () => setValue(\"\")\n  };\n};\nexport default useInputValue;\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport AddCircle from \"@material-ui/icons/AddCircle\";\nimport Button from \"@material-ui/core/Button\";\nimport MediaQuery from \"react-responsive\";\nimport \"./AddTask.css\";\nimport useInputValue from \"../hooks/useInputValue\"; //hook\n\nfunction getToday() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n  let yyyy = today.getFullYear();\n\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return (today = yyyy + \"-\" + mm + \"-\" + dd);\n}\n\nexport default function AddTask(props) {\n  const [model, setModel] = useState(false);\n  const { resetValue, ...task } = useInputValue(\"\");\n  const { resetValue: trackTaskResetValue, ...trackTask } = useInputValue(\"\");\n  const { resetValue: notesReetValue, ...notes } = useInputValue(\"\");\n  const { resetValue: notNeeded, ...plannedDate } = useInputValue(getToday());\n  const currentTaskSchema = {\n    description: \"\",\n    owner: \"tushar\",\n    priority: \"\",\n    status: \"\",\n    plannedDate: \"\",\n    notes: \"\"\n  };\n  if (props.track) {\n    currentTaskSchema.user = \"\";\n  }\n  const [currentTask, setCurrentTask] = useState(currentTaskSchema);\n  const [taskValid, settaskValid] = useState(false);\n\n  useEffect(\n    () => {\n      let validData = true;\n      for (let i in currentTask) {\n        if (!currentTask[i]) {\n          validData = false;\n        }\n      }\n\n      settaskValid(validData);\n    },\n    [currentTask]\n  );\n  useEffect(\n    () => {\n      setCurrentTask({\n        ...currentTask,\n        notes: notes.value\n      });\n    },\n    [notes.value]\n  );\n  useEffect(\n    () => {\n      console.log(\"test\");\n      setCurrentTask({\n        ...currentTask,\n        plannedDate: plannedDate.value\n      });\n    },\n    [plannedDate.value]\n  );\n\n  const addTask = ({ target: { name } }) => {\n    if (task.value === \"\") {\n      return alert(\"task cannot be Empty\");\n    }\n    setCurrentTask({\n      ...currentTask,\n      description: task.value\n    });\n    resetValue();\n    setModel(true);\n  };\n  const handleClose = () => {\n    setModel(false);\n  };\n  const handleNewTask = () => {\n    console.log(currentTask);\n    props.addTask(currentTask);\n    setModel(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <TextField\n        name=\"task\"\n        {...task}\n        style={{ margin: 8 }}\n        margin=\"normal\"\n        className=\"add_task\"\n        helperText=\"Type what needs to be done\"\n        label=\"Enter task name\"\n        variant=\"outlined\"\n      />\n      {props.track ? (\n        <TextField\n          name=\"track\"\n          {...trackTask}\n          margin=\"normal\"\n          id=\"outlined-name\"\n          label=\"Type User\"\n          style={{ margin: 8 }}\n          variant=\"outlined\"\n          helperText=\"Enter user name\"\n        />\n      ) : null}\n      <MediaQuery query=\"(max-device-width: 1224px)\">\n        <br />\n      </MediaQuery>\n      <AddCircle\n        disabled\n        color=\"primary\"\n        onClick={addTask}\n        style={{ margin: 8, fontSize: 50, cursor: \"pointer\" }}\n      />\n      <MediaQuery query=\"(min-device-width: 1224px)\">\n        <Dialog\n          fullWidth\n          open={model}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Fill task Details</DialogTitle>\n\n          <DialogContent style={{ textAlign: \"center\" }}>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Priority</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, priority: e.target.value })\n              }\n            >\n              <option value=\"high\">high</option>\n              <option value=\"low\">low</option>\n              <option value=\"meduim\">medium</option>\n            </select>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Status</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, status: e.target.value })\n              }\n            >\n              <option value=\"planned\">planned</option>\n              <option value=\"unplanned\">unplanned</option>\n              <option value=\"completed\">completed</option>\n            </select>\n            <br />\n            <br />\n            <TextField\n              id=\"date\"\n              label=\"Planned Date\"\n              type=\"date\"\n              {...plannedDate}\n            />\n            <TextField\n              {...notes}\n              fullWidth\n              margin=\"normal\"\n              label=\"Additional notes\"\n              helperText=\"notes\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleNewTask}\n              disabled={!taskValid}\n              color=\"primary\"\n            >\n              ADD TASK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MediaQuery>\n      <MediaQuery query=\"(max-device-width: 1224px)\">\n        <Dialog\n          fullScreen\n          fullWidth\n          open={model}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Fill task Details</DialogTitle>\n\n          <DialogContent style={{ textAlign: \"center\" }}>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Priority</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, priority: e.target.value })\n              }\n            >\n              <option value=\"high\">high</option>\n              <option value=\"low\">low</option>\n              <option value=\"meduim\">medium</option>\n            </select>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Status</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, status: e.target.value })\n              }\n            >\n              <option value=\"planned\">planned</option>\n              <option value=\"unplanned\">unplanned</option>\n              <option value=\"completed\">completed</option>\n            </select>\n            <br />\n            <br />\n            <TextField\n              id=\"date\"\n              label=\"Planned Date\"\n              type=\"date\"\n              {...plannedDate}\n            />\n            <TextField\n              {...notes}\n              fullWidth\n              margin=\"normal\"\n              label=\"Additional notes\"\n              helperText=\"notes\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              disabled={!taskValid}\n              onClick={handleNewTask}\n              color=\"primary\"\n            >\n              ADD TASK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MediaQuery>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nexport default TabContainer;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nfunction Nav(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {!props.sideDrawer ? (\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n          ) : null}\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            VG-TASK-MANAGEMENT\n          </Typography>\n          {!props.sideDrawer ? <Button color=\"inherit\">Login</Button> : null}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Nav);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction SimpleTable(props) {\n  const { task } = props;\n\n  return (\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"right\" />\n            <TableCell align=\"right\">Owner</TableCell>\n            <TableCell align=\"right\">Priority</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Notes</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {task.map(row => {\n            console.log(row);\n            return (\n              <TableRow key={row.id}>\n                <TableCell\n                  style={{ borderLeft: \"6px solid #3982CA\", borderRadius: 2 }}\n                  component=\"th\"\n                  scope=\"row\"\n                >\n                  {row.description}\n                </TableCell>\n\n                <TableCell align=\"right\">{row.chat}</TableCell>\n                <TableCell align=\"right\">{row.owner}</TableCell>\n                <TableCell align=\"right\">{row.priority}</TableCell>\n                <TableCell align=\"right\">{row.status}</TableCell>\n                <TableCell align=\"right\">{row.plannedDate}</TableCell>\n                <TableCell align=\"right\">{row.notes}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimpleTable);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\nimport AddTask from \"./AddTask\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tab from \"@material-ui/core/Tab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TabContainer from \"./TabContainer\";\nimport Nav from \"./Nav\";\nimport TaskTable from \"./TaskTable\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport useInputValue from \"./hooks/useInputValue\";\n\nexport default function App() {\n  const [value, setValue] = useState(0);\n  const [sideDrawer, setSideDrawer] = useState(false);\n  const [updateList, setUpdateList] = useState([]);\n  const { resetValue, ...chatText } = useInputValue(\"\");\n  const [task, setTask] = useState([\n    {\n      id: 1,\n      description: \"this is description\",\n      chat: (\n        <Tooltip title=\"Start conversation\" placement=\"top\">\n          <ChatIcon\n            onClick={() => setSideDrawer(true)}\n            style={{ cursor: \"pointer\" }}\n          />\n        </Tooltip>\n      ),\n      owner: \"tushar\",\n      priority: \"high\",\n      status: \"status\",\n      plannedDate: \"time left\",\n      notes: \"notes\"\n    }\n  ]);\n  const handleChange = (e, value) => {\n    console.log(value);\n    setValue(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUpdateList([...updateList, chatText.value]);\n  };\n  const addTask = newTask => {\n    console.log(newTask);\n    setTask([\n      ...task,\n      {\n        ...newTask,\n        chat: (\n          <Tooltip title=\"Start conversation\" placement=\"top\">\n            <ChatIcon\n              onClick={() => setSideDrawer(true)}\n              style={{ cursor: \"pointer\" }}\n            />\n          </Tooltip>\n        )\n      }\n    ]);\n  };\n  return (\n    <div>\n      <Nav />\n      <div id=\"pending\" />\n      <div className=\"delay\" />\n      <div className=\"high\" />\n\n      <div className=\"main-wrapper\">\n        <div className=\"task\">\n          <AppBar position=\"static\">\n            <Tabs value={value} onChange={handleChange}>\n              <Tab label=\"My Tasks\" />\n              <Tab label=\"Track\" />\n            </Tabs>\n          </AppBar>\n          {value === 0 && (\n            <TabContainer>\n              {\" \"}\n              <AddTask addTask={addTask} />\n              <TaskTable task={task} />\n            </TabContainer>\n          )}\n          {value === 1 && (\n            <TabContainer>\n              <AddTask track={true} />\n              <TaskTable task={task} />\n            </TabContainer>\n          )}\n          <Drawer\n            style={{ minWidth: \"25%\", textAlign: \"center\" }}\n            anchor=\"right\"\n            open={sideDrawer}\n            onClose={() => setSideDrawer(false)}\n          >\n            <div role=\"button\">\n              <Nav sideDrawer={true} />\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  style={{ marginTop: 10, minWidth: \"90%\" }}\n                  variant=\"outlined\"\n                  label=\"write an updated\"\n                  margin=\"normal\"\n                  {...chatText}\n                />\n              </form>\n              <List>\n                {updateList.map(item => (\n                  <ListItem>\n                    <ListItemText primary={item} secondary=\"author tushar\" />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          </Drawer>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}