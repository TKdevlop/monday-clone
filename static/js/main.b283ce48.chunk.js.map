{"version":3,"sources":["hooks/useInputValue.js","components/AddTask/index.js","components/EditTask/index.js","components/TaskTable/index.js","components/CustomAppBar/index.js","components/SideBar/index.js","container/TaskContainer/index.js","AuthContext/Auth.js","components/Login/index.js","serviceWorker.js","index.js","App.js"],"names":["useInputValue","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","e","target","resetValue","AddTask","props","model","setModel","_useInputValue","task","objectWithoutProperties","_useInputValue2","_useInputValue3","notes","_useInputValue4","today","Date","dd","getDate","mm","getMonth","getFullYear","getToday","plannedDate","currentTaskSchema","description","owner","priority","status","track","user","_useState3","_useState4","currentTask","setCurrentTask","_useState5","_useState6","taskValid","settaskValid","useEffect","validData","i","objectSpread","console","log","handleClose","handleNewTask","addTask","react_default","a","createElement","className","Button_default","style","margin","borderRadius","disabled","onClick","_ref","name","variant","color","TextField_default","assign","helperText","label","react_responsive_default","query","Dialog_default","fullWidth","open","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","textAlign","DialogContentText_default","padding","type","DialogActions_default","fullScreen","EditTask","edit","setEdit","text","taskValue","onSubmit","preventDefault","field","updateText","cursor","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","borderLeft","component","scope","Tooltip_default","title","placement","Chat_default","setSideDrawer","MenuAppBar","state","auth","anchorEl","handleChange","event","_this","setState","checked","handleMenu","currentTarget","this","_this$state","Boolean","FormGroup_default","FormControlLabel_default","control","Switch_default","aria-label","AppBar_default","position","Toolbar_default","Typography_default","grow","IconButton_default","aria-owns","undefined","aria-haspopup","AccountCircle_default","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","React","Component","flexGrow","menuButton","marginLeft","marginRight","ResponsiveDrawer","mobileOpen","drop","showBoards","handleDrawerToggle","handleClick","_this$props","drawer","background","height","noWrap","Divider_default","List_default","index","Fragment","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","ArrowDropUp_default","ArrowDropDown_default","boards","board","CssBaseline_default","Hidden_default","implementation","appBar","Menu_default","flex","Badge_default","badgeContent","Notifications_default","handleProfileMenuOpen","CustomAppBar","smUp","Drawer_default","container","anchor","direction","paper","drawerPaper","xsDown","content","children","display","defineProperty","breakpoints","up","flexShrink","concat","toolbar","mixins","withTheme","TaskContainer","sideDrawer","updateList","setUpdateList","chatText","active","_useState7","_useState8","currentBoard","_useState9","_useState10","setTask","uuid","SideBar","AddTask_AddTask","newTask","toConsumableArray","role","item","secondary","TaskTable","find","localTask","updatedTasks","etask","Auth","createContext","isAuth","isLoggedIn","isLoggedOut","AuthContext","useContext","Grid_default","md","sm","xs","alignItems","required","justify","Checkbox_default","disableFocusRipple","disableRipple","textTransform","window","location","hostname","match","ReactDOM","render","BrowserRouter","setIsAuth","Provider","components_Login","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b283ce48.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useInputValue = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    onChange: e => setValue(e.target.value),\n    resetValue: () => setValue(\"\")\n  };\n};\nexport default useInputValue;\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport MediaQuery from \"react-responsive\";\nimport \"./AddTask.css\";\nimport useInputValue from \"../../hooks/useInputValue\"; //hook\n\nfunction getToday() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n  let yyyy = today.getFullYear();\n\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return (today = yyyy + \"-\" + mm + \"-\" + dd);\n}\n\nexport default function AddTask(props) {\n  const [model, setModel] = useState(false);\n  const { resetValue, ...task } = useInputValue(\"\");\n  const { resetValue: trackTaskResetValue, ...trackTask } = useInputValue(\"\");\n  const { resetValue: notesReetValue, ...notes } = useInputValue(\"\");\n  const { resetValue: notNeeded, ...plannedDate } = useInputValue(getToday());\n  const currentTaskSchema = {\n    description: \"\",\n    owner: \"tushar\",\n    priority: \"\",\n    status: \"\",\n    plannedDate: \"\",\n    notes: \"\"\n  };\n  if (props.track) {\n    currentTaskSchema.user = \"\";\n  }\n  const [currentTask, setCurrentTask] = useState(currentTaskSchema);\n  const [taskValid, settaskValid] = useState(false);\n\n  useEffect(\n    () => {\n      let validData = true;\n      for (let i in currentTask) {\n        if (!currentTask[i]) {\n          validData = false;\n        }\n      }\n\n      settaskValid(validData);\n    },\n    [currentTask]\n  );\n  useEffect(\n    () => {\n      setCurrentTask({\n        ...currentTask,\n        notes: notes.value\n      });\n    },\n    [notes.value]\n  );\n  useEffect(\n    () => {\n      console.log(\"test\");\n      setCurrentTask({\n        ...currentTask,\n        plannedDate: plannedDate.value\n      });\n    },\n    [plannedDate.value]\n  );\n\n  const addTask = ({ target: { name } }) => {\n    setCurrentTask({\n      ...currentTask,\n      description: task.value\n    });\n    resetValue();\n    setModel(true);\n  };\n  const handleClose = () => {\n    setModel(false);\n  };\n  const handleNewTask = () => {\n    console.log(currentTask);\n    props.addTask(currentTask);\n    setModel(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Button\n        style={{ margin: 20, borderRadius: 50 }}\n        disabled={!task.value}\n        onClick={addTask}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        PROCEED\n      </Button>\n      <TextField\n        name=\"task\"\n        {...task}\n        style={{ margin: 5, borderRadius: 50 }}\n        className=\"add_task\"\n        helperText=\"Type what needs to be done\"\n        label=\"Enter task name\"\n      />\n      <MediaQuery query=\"(max-device-width: 1224px)\">\n        <br />\n      </MediaQuery>\n\n      <MediaQuery query=\"(min-device-width: 1224px)\">\n        <Dialog\n          fullWidth\n          open={model}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Fill task Details</DialogTitle>\n\n          <DialogContent style={{ textAlign: \"center\" }}>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Priority</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, priority: e.target.value })\n              }\n            >\n              <option value=\"high\">high</option>\n              <option value=\"low\">low</option>\n              <option value=\"meduim\">medium</option>\n            </select>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Status</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, status: e.target.value })\n              }\n            >\n              <option value=\"planned\">planned</option>\n              <option value=\"unplanned\">unplanned</option>\n              <option value=\"completed\">completed</option>\n            </select>\n            <br />\n            <br />\n            <TextField\n              id=\"date\"\n              label=\"Planned Date\"\n              type=\"date\"\n              {...plannedDate}\n            />\n            <TextField\n              {...notes}\n              fullWidth\n              margin=\"normal\"\n              label=\"Additional notes\"\n              helperText=\"notes\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleNewTask}\n              disabled={!taskValid}\n              color=\"primary\"\n            >\n              ADD TASK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MediaQuery>\n      <MediaQuery query=\"(max-device-width: 1224px)\">\n        <Dialog\n          fullScreen\n          fullWidth\n          open={model}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Fill task Details</DialogTitle>\n\n          <DialogContent style={{ textAlign: \"center\" }}>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Priority</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, priority: e.target.value })\n              }\n            >\n              <option value=\"high\">high</option>\n              <option value=\"low\">low</option>\n              <option value=\"meduim\">medium</option>\n            </select>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Status</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, status: e.target.value })\n              }\n            >\n              <option value=\"planned\">planned</option>\n              <option value=\"unplanned\">unplanned</option>\n              <option value=\"completed\">completed</option>\n            </select>\n            <br />\n            <br />\n            <TextField\n              id=\"date\"\n              label=\"Planned Date\"\n              type=\"date\"\n              {...plannedDate}\n            />\n            <TextField\n              {...notes}\n              fullWidth\n              margin=\"normal\"\n              label=\"Additional notes\"\n              helperText=\"notes\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              disabled={!taskValid}\n              onClick={handleNewTask}\n              color=\"primary\"\n            >\n              ADD TASK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MediaQuery>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useInputValue from \"../../hooks/useInputValue\";\n\nexport default function EditTask(props) {\n  const [edit, setEdit] = useState(false);\n  const { resetValue, ...taskValue } = useInputValue(props.text);\n  const updateText = e => {\n    e.preventDefault();\n    const { field, id } = props;\n    props.updateText(id, field, taskValue.value);\n    setEdit(false);\n  };\n  return (\n    <div>\n      {edit ? (\n        <form onSubmit={updateText}>\n          <TextField {...taskValue} fullWidth />\n        </form>\n      ) : (\n        <div onClick={() => setEdit(true)} style={{ cursor: \"pointer\" }}>\n          {props.text}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditTask from \"../EditTask\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction SimpleTable(props) {\n  const { task, classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"right\" />\n            <TableCell align=\"right\">Owner</TableCell>\n            <TableCell align=\"right\">Priority</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Notes</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {task.map(row => {\n            console.log(row);\n            return (\n              <TableRow key={row.id}>\n                <TableCell\n                  style={{\n                    borderLeft: \"6px solid #3982CA\",\n                    borderRadius: 2,\n                    padding: \"0px 0px 0px 3px\"\n                  }}\n                  component=\"th\"\n                  scope=\"row\"\n                >\n                  <EditTask\n                    id={row.id}\n                    field=\"description\"\n                    updateText={props.updateText}\n                    text={row.description}\n                  />\n                </TableCell>\n\n                <TableCell align=\"right\">\n                  {\" \"}\n                  <Tooltip title=\"Start conversation\" placement=\"top\">\n                    <ChatIcon\n                      onClick={() => props.setSideDrawer(true)}\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  </Tooltip>\n                </TableCell>\n                <TableCell align=\"right\">{row.owner}</TableCell>\n                <TableCell align=\"right\">{row.priority}</TableCell>\n                <TableCell align=\"right\">{row.status}</TableCell>\n                <TableCell align=\"right\">{row.plannedDate}</TableCell>\n                <TableCell\n                  style={{\n                    padding: \"0px 3px 0px 0px\"\n                  }}\n                  align=\"right\"\n                >\n                  {\" \"}\n                  <EditTask\n                    id={row.id}\n                    field=\"notes\"\n                    updateText={props.updateText}\n                    text={row.notes}\n                  />\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimpleTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nclass MenuAppBar extends React.Component {\n  state = {\n    auth: true,\n    anchorEl: null\n  };\n\n  handleChange = event => {\n    this.setState({ auth: event.target.checked });\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { auth, anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.root}>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={auth}\n                onChange={this.handleChange}\n                aria-label=\"LoginSwitch\"\n              />\n            }\n            label={auth ? \"Logout\" : \"Login\"}\n          />\n        </FormGroup>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Photos\n            </Typography>\n            {auth && (\n              <div>\n                <IconButton\n                  aria-owns={open ? \"menu-appbar\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\"\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\"\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.handleClose}>Profile</MenuItem>\n                  <MenuItem onClick={this.handleClose}>My account</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(MenuAppBar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport DownArrow from \"@material-ui/icons/ArrowDropDown\";\nimport UpArrow from \"@material-ui/icons/ArrowDropUp\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport Badge from \"@material-ui/core/Badge\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport CustomAppBar from \"../CustomAppBar\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: 0,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1\n  }\n});\n\nclass ResponsiveDrawer extends React.Component {\n  state = {\n    mobileOpen: false,\n    drop: false,\n    anchorEl: null\n  };\n  showBoards = () => {\n    this.setState({ drop: !this.state.drop });\n  };\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { anchorEl } = this.state;\n    const drawer = (\n      <div style={{ background: \"#EDEDED\", height: \"100%\" }}>\n        <Typography\n          variant=\"h6\"\n          style={{ padding: \"20px 0\", textAlign: \"center\" }}\n          noWrap\n        >\n          Vg-Task Management\n        </Typography>\n\n        <Divider />\n        <List>\n          {[\"Inbox\", \"MyWeek\"].map((text, index) => (\n            <>\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n              <Divider />\n            </>\n          ))}\n          <ListItem onClick={this.showBoards} button>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Board\"} />\n            {this.state.drop ? <UpArrow /> : <DownArrow />}\n          </ListItem>\n          <Divider />\n        </List>\n        <List>\n          {this.state.drop ? (\n            <div>\n              {this.props.boards.map(board => (\n                <ListItem\n                  key={board.name}\n                  style={{ textAlign: \"right\", padding: 0 }}\n                  button\n                >\n                  <ListItemText primary={board.name} />\n                </ListItem>\n              ))}\n            </div>\n          ) : null}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <Hidden implementation=\"css\">\n          <AppBar\n            style={{ background: \"#F7F7F7\", color: \"#000\" }}\n            position=\"fixed\"\n            className={classes.appBar}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                Vg-Task Management\n              </Typography>\n              <div style={{ flex: 1 }} />\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n\n              <IconButton\n                aria-haspopup=\"true\"\n                onClick={this.handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <CustomAppBar />\n        </Hidden>\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>{this.props.children}</main>\n      </div>\n    );\n  }\n}\n\nResponsiveDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\n","import React, { useState, useEffect } from \"react\";\nimport AddTask from \"../../components/AddTask\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TaskTable from \"../../components/TaskTable\";\nimport useInputValue from \"../../hooks/useInputValue\";\nimport SideBar from \"../../components/SideBar\";\nimport uuid from \"uuid/v4\";\n\nexport default function TaskContainer() {\n  const [sideDrawer, setSideDrawer] = useState(false);\n  const [updateList, setUpdateList] = useState([]);\n  const { resetValue, ...chatText } = useInputValue(\"\");\n  const [boards, setBoards] = useState([{ name: \"test\", active: false }]);\n  const [currentBoard, setCurrentBoard] = useState(\"test\");\n  const [task, setTask] = useState([]);\n\n  useEffect(() => {\n    setTask([\n      {\n        id: uuid(),\n        description: \"this is description\",\n        owner: \"tushar\",\n        priority: \"high\",\n        status: \"status\",\n        plannedDate: \"time left\",\n        notes: \"this is notes\"\n      }\n    ]);\n  }, []);\n  const updateText = (id, field, value) => {\n    const currentTask = task.find(localTask => localTask.id === id);\n    currentTask[field] = value;\n\n    const updatedTasks = task.map(etask => {\n      if (etask.id === id) {\n        etask = currentTask;\n        return etask;\n      }\n      return etask;\n    });\n    console.log(updatedTasks);\n    setTask([...updatedTasks]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUpdateList([...updateList, chatText.value]);\n  };\n  const addTask = newTask => {\n    console.log(newTask);\n    setTask([\n      ...task,\n      {\n        ...newTask,\n        id: uuid()\n      }\n    ]);\n  };\n  return (\n    <div>\n      <SideBar boards={boards}>\n        <div id=\"pending\" />\n        <div className=\"delay\" />\n        <div className=\"high\" />\n\n        <div className=\"main-wrapper\">\n          <div className=\"task\">\n            <h2 style={{ marginLeft: \"8%\" }}>{currentBoard}</h2>\n\n            <AddTask addTask={addTask} />\n            <Drawer\n              style={{ minWidth: \"25%\", textAlign: \"center\" }}\n              anchor=\"right\"\n              open={sideDrawer}\n              onClose={() => setSideDrawer(false)}\n            >\n              <div role=\"button\">\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    style={{ marginTop: 10, minWidth: \"90%\" }}\n                    variant=\"outlined\"\n                    label=\"write an updated\"\n                    margin=\"normal\"\n                    {...chatText}\n                  />\n                </form>\n                <List>\n                  {updateList.map(item => (\n                    <ListItem key={uuid()}>\n                      <ListItemText primary={item} secondary=\"author tushar\" />\n                    </ListItem>\n                  ))}\n                </List>\n              </div>\n            </Drawer>\n          </div>\n        </div>\n      </SideBar>\n      <div className=\"table\">\n        <TaskTable\n          setSideDrawer={setSideDrawer}\n          updateText={updateText}\n          task={task}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nexport const Auth = React.createContext({\n  isAuth: false,\n  isLoggedIn: () => {},\n  isLoggedOut: () => {}\n});\n","import React, { useContext } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Auth } from \"../../AuthContext/Auth\";\nimport \"./Login.css\";\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit * 2\n  },\n  padding: {\n    padding: theme.spacing.unit\n  }\n});\n\nfunction Login(props) {\n  const AuthContext = useContext(Auth);\n  const { classes } = props;\n  return (\n    <div style={{ height: \"100vh\", background: \"#EDEDED\" }}>\n      <div className=\"login\">\n        <Paper\n          style={{ padding: 10, borderRadius: 10 }}\n          className={classes.padding}\n        >\n          <div className={classes.margin}>\n            <Grid item md={true} sm={true} xs={true}>\n              <h1 style={{ width: \"100%\" }}>LOGIN</h1>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n              <Grid item />\n\n              <Grid item md={true} sm={true} xs={true}>\n                <TextField label=\"email\" type=\"email\" fullWidth required />\n              </Grid>\n            </Grid>\n            <Grid container spacing={8} alignItems=\"flex-end\">\n              <Grid item />\n\n              <Grid item md={true} sm={true} xs={true}>\n                <TextField\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                  required\n                />\n              </Grid>\n            </Grid>\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n              <Grid item>\n                <FormControlLabel\n                  control={<Checkbox color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  disableFocusRipple\n                  disableRipple\n                  style={{ textTransform: \"none\" }}\n                  variant=\"text\"\n                  color=\"primary\"\n                >\n                  Forgot password ?\n                </Button>\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" style={{ marginTop: \"10px\" }}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{ textTransform: \"none\" }}\n                onClick={() => AuthContext.isLoggedIn()}\n              >\n                Get Started\n              </Button>\n            </Grid>\n          </div>\n        </Paper>\n      </div>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Login);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\nimport TaskContainer from \"./container/TaskContainer\";\nimport { Auth } from \"./AuthContext/Auth\";\nimport Login from \"./components/Login\";\n\nexport default function App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const isLoggedIn = () => {\n    setIsAuth(true);\n  };\n  const isLoggedOut = () => {\n    setIsAuth(false);\n  };\n  return (\n    <div>\n      <Auth.Provider value={{ isAuth, isLoggedIn, isLoggedOut }}>\n        {isAuth ? <TaskContainer /> : <Login />}\n      </Auth.Provider>\n    </div>\n  );\n}\n"],"sourceRoot":""}