{"version":3,"sources":["hooks/useInputValue.js","AddTask/index.js","TabContainer/index.js","EditTask/index.js","TaskTable/index.js","SideBar/index.js","serviceWorker.js","index.js","App.js"],"names":["useInputValue","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","e","target","resetValue","AddTask","props","model","setModel","_useInputValue","task","objectWithoutProperties","_useInputValue2","trackTask","_useInputValue3","notes","_useInputValue4","today","Date","dd","getDate","mm","getMonth","getFullYear","getToday","plannedDate","currentTaskSchema","description","owner","priority","status","track","user","_useState3","_useState4","currentTask","setCurrentTask","_useState5","_useState6","taskValid","settaskValid","useEffect","validData","i","objectSpread","console","log","handleClose","handleNewTask","addTask","react_default","a","createElement","className","TextField_default","assign","name","style","margin","helperText","label","variant","id","react_responsive_default","query","Button_default","marginTop","disabled","onClick","_ref","color","Dialog_default","fullWidth","open","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","textAlign","DialogContentText_default","padding","type","DialogActions_default","fullScreen","TabContainer","Typography_default","component","children","EditTask","edit","setEdit","text","taskValue","onSubmit","preventDefault","field","updateText","cursor","withStyles","theme","root","width","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","borderLeft","borderRadius","scope","Tooltip_default","title","placement","Chat_default","setSideDrawer","ResponsiveDrawer","state","mobileOpen","handleDrawerToggle","_this","setState","_this$props","this","drawer","noWrap","Divider_default","List_default","index","Fragment","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","CssBaseline_default","Hidden_default","smUp","implementation","AppBar_default","position","appBar","Toolbar_default","IconButton_default","aria-label","menuButton","Menu_default","Drawer_default","container","anchor","direction","paper","drawerPaper","xsDown","content","React","Component","display","defineProperty","breakpoints","up","flexShrink","marginLeft","concat","marginRight","toolbar","mixins","flexGrow","withTheme","Boolean","window","location","hostname","match","ReactDOM","render","sideDrawer","updateList","setUpdateList","chatText","_useState7","_useState8","setTask","uuid","SideBar","Tabs_default","Tab_default","src_TabContainer","AddTask_AddTask","newTask","toConsumableArray","role","item","secondary","TaskTable","find","localTask","updatedTasks","etask","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1aad480.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useInputValue = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    onChange: e => setValue(e.target.value),\n    resetValue: () => setValue(\"\")\n  };\n};\nexport default useInputValue;\n","import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport MediaQuery from \"react-responsive\";\nimport \"./AddTask.css\";\nimport useInputValue from \"../hooks/useInputValue\"; //hook\n\nfunction getToday() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n  let yyyy = today.getFullYear();\n\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return (today = yyyy + \"-\" + mm + \"-\" + dd);\n}\n\nexport default function AddTask(props) {\n  const [model, setModel] = useState(false);\n  const { resetValue, ...task } = useInputValue(\"\");\n  const { resetValue: trackTaskResetValue, ...trackTask } = useInputValue(\"\");\n  const { resetValue: notesReetValue, ...notes } = useInputValue(\"\");\n  const { resetValue: notNeeded, ...plannedDate } = useInputValue(getToday());\n  const currentTaskSchema = {\n    description: \"\",\n    owner: \"tushar\",\n    priority: \"\",\n    status: \"\",\n    plannedDate: \"\",\n    notes: \"\"\n  };\n  if (props.track) {\n    currentTaskSchema.user = \"\";\n  }\n  const [currentTask, setCurrentTask] = useState(currentTaskSchema);\n  const [taskValid, settaskValid] = useState(false);\n\n  useEffect(\n    () => {\n      let validData = true;\n      for (let i in currentTask) {\n        if (!currentTask[i]) {\n          validData = false;\n        }\n      }\n\n      settaskValid(validData);\n    },\n    [currentTask]\n  );\n  useEffect(\n    () => {\n      setCurrentTask({\n        ...currentTask,\n        notes: notes.value\n      });\n    },\n    [notes.value]\n  );\n  useEffect(\n    () => {\n      console.log(\"test\");\n      setCurrentTask({\n        ...currentTask,\n        plannedDate: plannedDate.value\n      });\n    },\n    [plannedDate.value]\n  );\n\n  const addTask = ({ target: { name } }) => {\n    setCurrentTask({\n      ...currentTask,\n      description: task.value\n    });\n    resetValue();\n    setModel(true);\n  };\n  const handleClose = () => {\n    setModel(false);\n  };\n  const handleNewTask = () => {\n    console.log(currentTask);\n    props.addTask(currentTask);\n    setModel(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <TextField\n        name=\"task\"\n        {...task}\n        style={{ margin: 8 }}\n        margin=\"normal\"\n        className=\"add_task\"\n        helperText=\"Type what needs to be done\"\n        label=\"Enter task name\"\n        variant=\"outlined\"\n      />\n      {props.track ? (\n        <TextField\n          name=\"track\"\n          {...trackTask}\n          margin=\"normal\"\n          id=\"outlined-name\"\n          label=\"Type User\"\n          style={{ margin: 8 }}\n          variant=\"outlined\"\n          helperText=\"Enter user name\"\n        />\n      ) : null}\n      <MediaQuery query=\"(max-device-width: 1224px)\">\n        <br />\n      </MediaQuery>\n\n      <Button\n        style={{ margin: 8, marginTop: 15 }}\n        disabled={!task.value}\n        onClick={addTask}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        PROCEED\n      </Button>\n      <MediaQuery query=\"(min-device-width: 1224px)\">\n        <Dialog\n          fullWidth\n          open={model}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Fill task Details</DialogTitle>\n\n          <DialogContent style={{ textAlign: \"center\" }}>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Priority</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, priority: e.target.value })\n              }\n            >\n              <option value=\"high\">high</option>\n              <option value=\"low\">low</option>\n              <option value=\"meduim\">medium</option>\n            </select>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Status</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, status: e.target.value })\n              }\n            >\n              <option value=\"planned\">planned</option>\n              <option value=\"unplanned\">unplanned</option>\n              <option value=\"completed\">completed</option>\n            </select>\n            <br />\n            <br />\n            <TextField\n              id=\"date\"\n              label=\"Planned Date\"\n              type=\"date\"\n              {...plannedDate}\n            />\n            <TextField\n              {...notes}\n              fullWidth\n              margin=\"normal\"\n              label=\"Additional notes\"\n              helperText=\"notes\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleNewTask}\n              disabled={!taskValid}\n              color=\"primary\"\n            >\n              ADD TASK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MediaQuery>\n      <MediaQuery query=\"(max-device-width: 1224px)\">\n        <Dialog\n          fullScreen\n          fullWidth\n          open={model}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Fill task Details</DialogTitle>\n\n          <DialogContent style={{ textAlign: \"center\" }}>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Priority</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, priority: e.target.value })\n              }\n            >\n              <option value=\"high\">high</option>\n              <option value=\"low\">low</option>\n              <option value=\"meduim\">medium</option>\n            </select>\n            <DialogContentText style={{ padding: 10 }}>\n              Select <b>Status</b> for current task.\n            </DialogContentText>\n            <select\n              style={{ padding: 5 }}\n              onChange={e =>\n                setCurrentTask({ ...currentTask, status: e.target.value })\n              }\n            >\n              <option value=\"planned\">planned</option>\n              <option value=\"unplanned\">unplanned</option>\n              <option value=\"completed\">completed</option>\n            </select>\n            <br />\n            <br />\n            <TextField\n              id=\"date\"\n              label=\"Planned Date\"\n              type=\"date\"\n              {...plannedDate}\n            />\n            <TextField\n              {...notes}\n              fullWidth\n              margin=\"normal\"\n              label=\"Additional notes\"\n              helperText=\"notes\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button\n              disabled={!taskValid}\n              onClick={handleNewTask}\n              color=\"primary\"\n            >\n              ADD TASK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </MediaQuery>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nexport default TabContainer;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport useInputValue from \"../hooks/useInputValue\";\n\nexport default function EditTask(props) {\n  const [edit, setEdit] = useState(false);\n  const { resetValue, ...taskValue } = useInputValue(props.text);\n  const updateText = e => {\n    e.preventDefault();\n    const { field, id } = props;\n    props.updateText(id, field, taskValue.value);\n    setEdit(false);\n  };\n  return (\n    <div>\n      {edit ? (\n        <form onSubmit={updateText}>\n          <TextField {...taskValue} fullWidth />\n        </form>\n      ) : (\n        <div onClick={() => setEdit(true)} style={{ cursor: \"pointer\" }}>\n          {props.text}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditTask from \"../EditTask\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction SimpleTable(props) {\n  const { task, classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"right\" />\n            <TableCell align=\"right\">Owner</TableCell>\n            <TableCell align=\"right\">Priority</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Notes</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {task.map(row => {\n            console.log(row);\n            return (\n              <TableRow key={row.id}>\n                <TableCell\n                  style={{ borderLeft: \"6px solid #3982CA\", borderRadius: 2 }}\n                  component=\"th\"\n                  scope=\"row\"\n                >\n                  <EditTask\n                    id={row.id}\n                    field=\"description\"\n                    updateText={props.updateText}\n                    text={row.description}\n                  />\n                </TableCell>\n\n                <TableCell align=\"right\">\n                  {\" \"}\n                  <Tooltip title=\"Start conversation\" placement=\"top\">\n                    <ChatIcon\n                      onClick={() => props.setSideDrawer(true)}\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  </Tooltip>\n                </TableCell>\n                <TableCell align=\"right\">{row.owner}</TableCell>\n                <TableCell align=\"right\">{row.priority}</TableCell>\n                <TableCell align=\"right\">{row.status}</TableCell>\n                <TableCell align=\"right\">{row.plannedDate}</TableCell>\n                <TableCell align=\"right\">\n                  {\" \"}\n                  <EditTask\n                    id={row.id}\n                    field=\"notes\"\n                    updateText={props.updateText}\n                    text={row.notes}\n                  />\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimpleTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1\n  }\n});\n\nclass ResponsiveDrawer extends React.Component {\n  state = {\n    mobileOpen: false\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const drawer = (\n      <div>\n        <Typography\n          variant=\"h6\"\n          style={{ padding: \"20px 0\", textAlign: \"center\" }}\n          noWrap\n        >\n          Vg-Task Management\n        </Typography>\n\n        <Divider />\n        <List>\n          {[\"Inbox\", \"MyWeek\", \"Board\"].map((text, index) => (\n            <>\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n              <Divider />\n            </>\n          ))}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Hidden smUp implementation=\"css\">\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                Vg-Task Management\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Hidden>\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>{this.props.children}</main>\n      </div>\n    );\n  }\n}\n\nResponsiveDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\nimport AddTask from \"./AddTask\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tab from \"@material-ui/core/Tab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TabContainer from \"./TabContainer\";\nimport TaskTable from \"./TaskTable\";\nimport useInputValue from \"./hooks/useInputValue\";\nimport SideBar from \"./SideBar\";\nimport uuid from \"uuid/v4\";\n\nexport default function App() {\n  const [value, setValue] = useState(0);\n  const [sideDrawer, setSideDrawer] = useState(false);\n  const [updateList, setUpdateList] = useState([]);\n  const { resetValue, ...chatText } = useInputValue(\"\");\n\n  const [task, setTask] = useState([]);\n\n  useEffect(() => {\n    setTask([\n      {\n        id: uuid(),\n        description: \"this is description\",\n        owner: \"tushar\",\n        priority: \"high\",\n        status: \"status\",\n        plannedDate: \"time left\",\n        notes: \"this is notes\"\n      }\n    ]);\n  }, []);\n  const updateText = (id, field, value) => {\n    const currentTask = task.find(localTask => localTask.id === id);\n    currentTask[field] = value;\n\n    const updatedTasks = task.map(etask => {\n      if (etask.id === id) {\n        etask = currentTask;\n        return etask;\n      }\n      return etask;\n    });\n    console.log(updatedTasks);\n    setTask([...updatedTasks]);\n  };\n\n  const handleChange = (e, value) => {\n    console.log(value);\n    setValue(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUpdateList([...updateList, chatText.value]);\n  };\n  const addTask = newTask => {\n    console.log(newTask);\n    setTask([\n      ...task,\n      {\n        ...newTask,\n        id: uuid()\n      }\n    ]);\n  };\n  return (\n    <div>\n      <SideBar>\n        <div id=\"pending\" />\n        <div className=\"delay\" />\n        <div className=\"high\" />\n\n        <div className=\"main-wrapper\">\n          <div className=\"task\">\n            <AppBar position=\"static\">\n              <Tabs value={value} onChange={handleChange}>\n                <Tab label=\"My Tasks\" />\n                <Tab label=\"Track\" />\n              </Tabs>\n            </AppBar>\n            {value === 0 && (\n              <TabContainer>\n                {\" \"}\n                <AddTask addTask={addTask} />\n                {/* <TaskTable task={task} /> */}\n              </TabContainer>\n            )}\n            {value === 1 && (\n              <TabContainer>\n                <AddTask track={true} />\n                {/* <TaskTable task={task} /> */}\n              </TabContainer>\n            )}\n            <Drawer\n              style={{ minWidth: \"25%\", textAlign: \"center\" }}\n              anchor=\"right\"\n              open={sideDrawer}\n              onClose={() => setSideDrawer(false)}\n            >\n              <div role=\"button\">\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    style={{ marginTop: 10, minWidth: \"90%\" }}\n                    variant=\"outlined\"\n                    label=\"write an updated\"\n                    margin=\"normal\"\n                    {...chatText}\n                  />\n                </form>\n                <List>\n                  {updateList.map(item => (\n                    <ListItem key={uuid()}>\n                      <ListItemText primary={item} secondary=\"author tushar\" />\n                    </ListItem>\n                  ))}\n                </List>\n              </div>\n            </Drawer>\n          </div>\n        </div>\n      </SideBar>\n      <div className=\"table\">\n        <TaskTable\n          setSideDrawer={setSideDrawer}\n          updateText={updateText}\n          task={task}\n        />\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}